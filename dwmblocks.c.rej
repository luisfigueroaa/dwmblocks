--- dwmblocks.c
+++ dwmblocks.c
@@ -55,8 +57,21 @@ void getcmd(const Block *block, char *output)
 		output[0] = block->signal;
 		output++;
 	}
-	char *cmd = block->command;
-	FILE *cmdf = popen(cmd,"r");
+	char* cmd;
+	FILE *cmdf;
+	if (button)
+	{
+		cmd = strcat(exportstring, block->command);
+		cmd[20] = '0' + button;
+		button = 0;
+		cmdf = popen(cmd,"r");
+		cmd[22] = '\0';
+	}
+	else
+	{
+		cmd = block->command;
+		cmdf = popen(cmd,"r");
+	}
 	if (!cmdf)
 		return;
 	fgets(output, CMDLENGTH, cmdf);
@@ -104,7 +119,6 @@ void setupsignals()
 	sa.sa_sigaction = buttonhandler;
 	sa.sa_flags = SA_SIGINFO;
 	sigaction(SIGUSR1, &sa, NULL);
-	signal(SIGCHLD, SIG_IGN);
 
 }
 #endif
@@ -167,29 +181,9 @@ void sighandler(int signum)
 
 void buttonhandler(int sig, siginfo_t *si, void *ucontext)
 {
-	int button = si->si_value.sival_int & 0xff;
-	sig = si->si_value.sival_int >> 8;
-	getsigcmds(sig);
+	button = si->si_value.sival_int & 0xff;
+	getsigcmds(si->si_value.sival_int >> 8);
 	writestatus();
-	if (fork() == 0)
-	{
-		static char exportstring[CMDLENGTH + 22] = "export BLOCK_BUTTON=-;";
-		const Block *current;
-		int i;
-		for (i = 0; i < LENGTH(blocks); i++)
-		{
-			current = blocks + i;
-			if (current->signal == sig)
-				break;
-		}
-		char *cmd = strcat(exportstring, blocks[i].command);
-		cmd[20] = '0' + button;
-		char *command[] = { "/bin/sh", "-c", cmd, NULL };
-		setsid();
-		execvp(command[0], command);
-		exit(EXIT_SUCCESS);
-		cmd[22] = '\0';
-	}
 }
 
 #endif
